library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
?manipulate
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("manipulate")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rCharts")
library(rCharts)
test
========================================================
getwd()
setwd("Documents//Travail//Coursera//DataScience//DevelopingDataProducts//PitchPresentation")
data <- read.table("data.txt")
nonempty <- matrix(nr=7,nc=7)
for(i in 1:7){}
for(i in 1:7){
for(j in 1:7){
nonempty[i,j] <- sum(!is.na(data[,i]) & !is.na(data[,j]))}}
nonempty
row.names(nonempty) <- names(data)
col.names(nonempty) <- names(data)
colnames(nonempty) <- names(data)
nonempty
names(data)
data <- read.table("data.txt", header=TRUE)
names(data)
colnames(nonempty) <- names(data)
row.names(nonempty) <- names(data)
nonempty
summary(data)
data <- read.table("data.txt", header=TRUE)
nonempty <- matrix(nr=7, nc=7)
for (i in 1:7){
for (j in 1:7){
nonempty[i, j] <- sum(!is.na(data[, i]) & !is.na(data[, j]))
}
}
colnames(nonempty) <- names(data)
row.names(nonempty) <- names(data)
names(data)
nonempty
x <- data$ms[!is.na(data$ms) & !is.na(data$mw)]
y <- data$mw[!is.na(data$ms) & !is.na(data$mw)]
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("ms", "mw", "freq")
subFreqData <- subset(freqData, freq > 0)
subFreqData$ms <- as.numeric(as.character(subFreqData$ms))
subFreqData$mw <- as.numeric(as.character(subFreqData$mw))
fit <- lm(mw ~ ms, data = subFreqData, weights = freq)
coeff <- summary(fit)$coefficients
R2 <- summary(fit)$r.squared
sigma <- summary(fit)$sigma
R2bootstrap <- function(x, y, freq, n){
R2 <- vector(length = n)
for (i in 1:n){
i_app <- sample.int(length(y), size = length(y), replace = TRUE)
i_pre <- c(1:length(y))[!c(1:length(y)) %in% i_app]
app <- data.frame(y = y[i_app], x = x[i_app], freq = freq[i_app])
pre <- data.frame(y = y[i_pre], x = x[i_pre], freq = freq[i_pre])
fit <- lm(y ~ x, data = app, weights = freq)
yhat <- predict(fit, pre)
R2[i] <- 1-sum((pre$y-yhat)^2)/sum((pre$y-mean(pre$y))^2)
}
return(mean(R2))
}
R2bootstrap(subFreqData$ms, subFreqData$mw, subFreqData$freq, 50)
library(ggplot2)
g <- ggplot(subFreqData, aes(x = ms, y = mw))
g <- g + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(aes(colour = freq, size = freq))
g <- g + scale_colour_gradient(low = "grey25", high = "white")
g <- g + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 1, colour = "red")
g <- g + geom_abline(intercept = 0, slope = 1, size = 1, linetype = "dashed", colour = "grey25")
g <- g + geom_abline(intercept = 2.07, slope = 0.67, size = 1, colour = "blue")
g <- g + geom_abline(intercept = 2.13, slope = 0.67, size = 1, colour = "green")
g <- g + stat_function(fun = function(t) 2.863 + exp(0.233 * t - 0.222), size = 1, colour = "gold")
g <- g + coord_cartesian(xlim = c(min(subFreqData$ms), max(subFreqData$ms)), ylim = c(min(subFreqData$mw), max(subFreqData$mw)))
g <- g + labs(title = "Comparaison entre magnitudes d'ondes de surface et de moment", x = "Magnitude d'ondes de surface", y = "Magnitude de moment")
g
install.packages("labeling")
g <- ggplot(subFreqData, aes(x = ms, y = mw))
g <- g + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(aes(colour = freq, size = freq))
g <- g + scale_colour_gradient(low = "grey25", high = "white")
g <- g + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 1, colour = "red")
g <- g + geom_abline(intercept = 0, slope = 1, size = 1, linetype = "dashed", colour = "grey25")
g <- g + geom_abline(intercept = 2.07, slope = 0.67, size = 1, colour = "blue")
g <- g + geom_abline(intercept = 2.13, slope = 0.67, size = 1, colour = "green")
g <- g + stat_function(fun = function(t) 2.863 + exp(0.233 * t - 0.222), size = 1, colour = "gold")
g <- g + coord_cartesian(xlim = c(min(subFreqData$ms), max(subFreqData$ms)), ylim = c(min(subFreqData$mw), max(subFreqData$mw)))
g <- g + labs(title = "Comparaison entre magnitudes d'ondes de surface et de moment", x = "Magnitude d'ondes de surface", y = "Magnitude de moment")
g
